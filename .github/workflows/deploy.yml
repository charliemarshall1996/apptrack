name: Deploy Release
run-name: ${{ github.actor }} is deploying a release

on:
  release:
    types:
      - published
      - edited
  workflow_dispatch:
    inputs:
      migrate:
        type: boolean
        description: Migrate database?
        required: false
        default: false
      init_new_db:
        type: boolean
        description: Initialize new database?
        required: false
        default: false
      install_dependencies:
        type: boolean
        description: Install dependencies?
        required: false
        default: false
      collect_static:
        type: boolean
        description: Collect static files?
        required: false
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find SSH Directory
        run: mkdir -p ~/.ssh
      - name: Add SSH Key
        run: echo "${{ secrets.PYANYWHERE_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
      - name: Make SSH Key Readable
        run: chmod 600 ~/.ssh/id_ed25519
      - name: Pull latest changes
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 "${{ secrets.PYANYWHERE_USER }}"@ssh.pythonanywhere.com << EOF
          cd apptrack
          git fetch origin
          git reset --hard origin/main
          EOF
      - name: Activate virtual environment and Install dependencies
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 "${{ secrets.PYANYWHERE_USER }}"@ssh.pythonanywhere.com << EOF
          cd apptrack
          chmod +x ~/.virtualenvs/.venv/bin/activate
          source .virtualenvs/.venv/.bin/activate
          pip install -r requirements.txt
          EOF
        if: ${{ success() }} && ${{ inputs.install_dependencies }} && ${{ github.event_name != 'release' }}
      - name: Remove migrations
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 "${{ secrets.PYANYWHERE_USER }}"@ssh.pythonanywhere.com << EOF
          cd apptrack/apptrack
          python manage.py runscript db_init
          EOF
        if: ${{ inputs.init_new_db == true }}
      - name: Make migrations
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 "${{ secrets.PYANYWHERE_USER }}"@ssh.pythonanywhere.com << EOF
          cd apptrack/apptrack
          python manage.py makemigrations
          EOF
        if: ${{ inputs.migrate == true }} && ${{ github.event_name != 'release' }}
      - name: Make migrate
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 "${{ secrets.PYANYWHERE_USER }}"@ssh.pythonanywhere.com << EOF
          cd apptrack/apptrack
          python manage.py migrate
          EOF
        if: ${{ success() }} && ${{ inputs.migrate == true }} && ${{ github.event_name != 'release' }}
      - name: Transfer data
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 "${{ secrets.PYANYWHERE_USER }}"@ssh.pythonanywhere.com << EOF
          cd apptrack/apptrack
          python manage.py runscript transfer_data
          EOF
        if: ${{ inputs.init_new_db == true }}
      - name: Collect static files
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 "${{ secrets.PYANYWHERE_USER }}"@ssh.pythonanywhere.com << EOF
          cd apptrack/apptrack
          python manage.py collectstatic --noinput
          EOF
        if: ${{ inputs.collect_static == true }}
