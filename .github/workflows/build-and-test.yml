name: Build and Test
run-name: ${{ github.actor }} is pushing to ${{ github.ref }}

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.9"

      # Setup environment
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/apptrack" >> $GITHUB_ENV

      # Setup settings.py
      - name: Set up settings.py directory
        run: mkdir -p $GITHUB_WORKSPACE/apptrack/apptrack
      - name: add secret_key
        run: echo "SECRET_KEY = '${{ secrets.DJANGO_SECRET_KEY }}'" > $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
      - name: populate settings.py
        run: cat .github/workflows/settings.txt >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
      - name: add email secrets
        run: |
          echo "ANYMAIL = {'BREVO_API_KEY': '${{ secrets.BREVO_API_KEY }}', 'IGNORE_RECIPIENT_STATUS': True}" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
      # Migrate
      - name: Make migrations
        run: python apptrack/manage.py makemigrations
        env:
          DJANGO_SETTINGS_MODULE: apptrack.settings
      - name: Apply migrations
        run: python apptrack/manage.py migrate
        env:
          DJANGO_SETTINGS_MODULE: apptrack.settings

      # Run tests
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest -cov=apptrack --cov-report=xml
        env:
          DJANGO_SETTINGS_MODULE: apptrack.settings

      # Upload coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # Lint
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff check --output-format=github .
        env:
          DJANGO_SETTINGS_MODULE: apptrack.settings
        continue-on-error: true

      # Cleanup
      - name: Cleanup settings.py
        if: always()
        run: rm -f $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
