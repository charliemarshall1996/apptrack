name: Build and Test
run-name: ${{ github.actor }} is pushing to ${{ github.ref }}

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.9"
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/apptrack" >> $GITHUB_ENV
      - name: Set up settings.py
        run: |
          mkdir -p $GITHUB_WORKSPACE/apptrack/apptrack
          echo "import os" > $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "from pathlib import Path" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "SECRET_KEY = '${{ secrets.DJANGO_SECRET_KEY }}'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "DEBUG = False" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "ALLOWED_HOSTS = ['localhost', 'apptrack.app', '127.0.0.1', 'www.apptrack.app']" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "AUTHENTICATION_BACKENDS = ['accounts.backends.EmailVerificationBackend']" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "BASE_DIR = Path(__file__).resolve().parent.parent" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "INSTALLED_APPS = ['django.contrib.admin',
          'django.contrib.auth',
          'django.contrib.contenttypes',
          'django.contrib.sessions',
          'django.contrib.messages',
          'django.contrib.staticfiles',
          'accounts',
          'blog',
          'core',
          'crispy_forms',
          'crispy_bootstrap5',
          'jobs',
          'django_countries',
          'pycountry',
          'anymail',
          'django_ckeditor_5']" 
          >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "MIDDLEWARE = ['django.middleware.security.SecurityMiddleware','django.contrib.sessions.middleware.SessionMiddleware','django.middleware.common.CommonMiddleware','django.middleware.csrf.CsrfViewMiddleware','django.contrib.auth.middleware.AuthenticationMiddleware','django.contrib.messages.middleware.MessageMiddleware','django.middleware.clickjacking.XFrameOptionsMiddleware']" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "ROOT_URLCONF = 'apptrack.urls'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "TEMPLATES = [{'BACKEND': 'django.template.backends.django.DjangoTemplates','DIRS': [],'APP_DIRS': True,'OPTIONS': {'context_processors': ['django.template.context_processors.debug','django.template.context_processors.request','django.contrib.auth.context_processors.auth','django.contrib.messages.context_processors.messages']}}]" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "WSGI_APPLICATION = 'apptrack.wsgi.application'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "DATABASES = {'default': {'ENGINE': 'django.db.backends.sqlite3','NAME': BASE_DIR / 'db.sqlite3'}}" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "AUTH_PASSWORD_VALIDATORS = [{'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},{'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},{'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},{'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'}]" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "LANGUAGE_CODE = 'en-us'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "TIME_ZONE = 'UTC'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "USE_I18N = True" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "USE_TZ = True" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "STATIC_URL = 'static/'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "CRISPY_TEMPLATE_PACK = 'bootstrap5'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "MEDIA_URL = '/media/'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "BREVO_API_URL = 'https://api.brevo.com'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "ANYMAIL = {'BREVO_API_KEY': '${{ secrets.BREVO_API_KEY }}', 'IGNORE_RECIPIENT_STATUS': True}" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "DEFAULT_FROM_EMAIL = 'no-reply@apptrack.app'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "AUTH_USER_MODEL = 'accounts.CustomUser'" >> $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
          echo "customColorPalette = [
                {
                    'color': 'hsl(4, 90%, 58%)',
                    'label': 'Red'
                },
                {
                    'color': 'hsl(340, 82%, 52%)',
                    'label': 'Pink'
                },
                {
                    'color': 'hsl(291, 64%, 42%)',
                    'label': 'Purple'
                },
                {
                    'color': 'hsl(262, 52%, 47%)',
                    'label': 'Deep Purple'
                },
                {
                    'color': 'hsl(231, 48%, 48%)',
                    'label': 'Indigo'
                },
                {
                    'color': 'hsl(207, 90%, 54%)',
                    'label': 'Blue'
                },
            ]

          CKEDITOR_5_CUSTOM_CSS = 'path_to.css' # optional
          CKEDITOR_5_FILE_STORAGE = "path_to_storage.CustomStorage" # optional
          CKEDITOR_5_CONFIGS = {
          'default': {
              'toolbar': ['heading', '|', 'bold', 'italic', 'link',
                          'bulletedList', 'numberedList', 'blockQuote', 'imageUpload', ],

          },
          'extends': {
              'blockToolbar': [
                  'paragraph', 'heading1', 'heading2', 'heading3',
                  '|',
                  'bulletedList', 'numberedList',
                  '|',
                  'blockQuote',
              ],
              'toolbar': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
              'code','subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',
                          'bulletedList', 'numberedList', 'todoList', '|',  'blockQuote', 'imageUpload', '|',
                          'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'removeFormat',
                          'insertTable',],
              'image': {
                  'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',
                              'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side',  '|'],
                  'styles': [
                      'full',
                      'side',
                      'alignLeft',
                      'alignRight',
                      'alignCenter',
                  ]

              },
              'table': {
                  'contentToolbar': [ 'tableColumn', 'tableRow', 'mergeTableCells',
                  'tableProperties', 'tableCellProperties' ],
                  'tableProperties': {
                      'borderColors': customColorPalette,
                      'backgroundColors': customColorPalette
                  },
                  'tableCellProperties': {
                      'borderColors': customColorPalette,
                      'backgroundColors': customColorPalette
                  }
              },
              'heading' : {
                  'options': [
                      { 'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph' },
                      { 'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1' },
                      { 'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2' },
                      { 'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3' }
                  ]
              }
          },
          'list': {
              'properties': {
                  'styles': 'true',
                  'startIndex': 'true',
                  'reversed': 'true',
              }
          }
          }

          CKEDITOR_5_FILE_UPLOAD_PERMISSION = 'staff'"
      - name: Apply migrations
        run: python apptrack/manage.py migrate

      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff check --output-format=github .
        continue-on-error: true

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: junit/test-results.xml
        if: ${{ always() }}

      - name: Cleanup settings.py
        if: always()
        run: rm -f $GITHUB_WORKSPACE/apptrack/apptrack/settings.py
